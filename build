#!/bin/bash

unset $(env | cut -d= -f1)
set +h
set -e
umask 022

while getopts ":bs:l:" option; do
	case $option in
		b) do_build= ;;
		s) start_index=$OPTARG;;
		l) lfs_device=$OPTARG;;
		*) 
			echo "bad option: " $option
			exit ;;
	esac
done

LFS=/mnt/lfs

PATH=/usr/bin
if [ ! -L /bin ]; then PATH=/bin:$PATH; fi
PATH=$LFS/tools/bin:$PATH

LC_ALL=POSIX
LFS_TGT=$(uname -m)-lfs-linux-gnu
CONFIG_SITE=$LFS/usr/share/config.site
MAKEFLAGS=-j$(nproc)
export LC_ALL LFS LFS_TGT PATH CONFIG_SITE MAKEFLAGS

function setup_lfs {
	mount | grep $LFS > /dev/null
	if [ $? -ne 0 ]; then
		sudo mount -v -t ext4 ${lfs_device:?Device to be mounted for LFS root is required by passing -l <device>} $LFS
	fi

	root_directories=(etc var usr/{bin,lib,sbin} lib64 tools)
	for directory in ${root_directories[@]}; do
		if [ ! -d $LFS/$directory ]; then
			sudo mkdir -pv $LFS/$directory
		fi
	done

	for i in bin lib sbin; do
		if [ ! -L $LFS/$i ]; then
			sudo ln -sv usr/$i $LFS/$i
		fi
	done

}

function DEFAULT_CONFIGURE_ARGS {
	echo "--prefix=/usr \
		  --host=$LFS_TGT \
		  --build=$(build-aux/config.guess)"
}

function build {
	./configure $(DEFAULT_CONFIGURE_ARGS) && make && make DESTDIR=$LFS install
}

function do_phase1 {
	shopt -s extglob
	for package in `ls -v phase1`; do
		index=${package%%-*}
		if [ $index -lt ${start_index:=-1} ]; then
			continue
		fi
		package_script=`realpath "phase1/$package"`

		(
			. $package_script
			package_archive=`basename ${DOWNLOAD:?}`
			package_directory=${package_archive%%-[[:digit:]]*}
			source_directory="$LFS/sources/$package_directory"
			if [ ! -d $source_directory ]; then
				mkdir -pv $source_directory
				echo "created directory: $source_directory"
			fi

			pushd $source_directory > /dev/null
			if [ ! -e $package_archive ]; then
				wget $DOWNLOAD
			fi

			decompressed_archive=${package_archive%.tar.*}
			if [ ! -d $decompressed_archive ]; then
				tar -xf $package_archive
			fi

			pushd $decompressed_archive > /dev/null
			build
			popd > /dev/null
			popd > /dev/null;
		)
	done;
}

if [ ! -v do_build ]; then
	setup_lfs
	su -c "bash /home/camitche/automated-lfs/build" - lfs
else
	do_phase1
fi
