#!/bin/bash

set +h
set -e
set -u

function setup_lfs {
	BUILD_USER=$USER
	LFS_TERM=$TERM
	unset $(env | cut -d= -f1)
	umask 022

	LFS=/mnt/lfs

	PATH=/usr/bin
	if [ ! -L /bin ]; then PATH=/bin:$PATH; fi
	PATH=$LFS/tools/bin:$PATH

	LC_ALL=POSIX
	LFS_TGT=$(uname -m)-lfs-linux-gnu
	CONFIG_SITE=$LFS/usr/share/config.site
	MAKEFLAGS=-j$(nproc)
	export LC_ALL LFS LFS_TGT PATH CONFIG_SITE MAKEFLAGS

	(. version-check)

	if [ ! -d $LFS ]; then
		sudo mkdir -pv $LFS
	fi

	(
		set +e
		mount | grep $LFS > /dev/null
		if [ $? -ne 0 ]; then
			sudo mount -v -t ext4 ${lfs_device:?Device to be mounted for LFS root is required by passing -l <device>} $LFS
		fi
	)

	sudo chown root:root $LFS
	sudo chmod 755 $LFS

	root_directories=(etc var usr/{bin,lib,sbin} lib64 tools sources)
	for directory in ${root_directories[@]}; do
		if [ ! -d $LFS/$directory ]; then
			sudo mkdir -pv $LFS/$directory
		fi
	done

	sudo chmod -v a+wt $LFS/sources

	for i in bin lib sbin; do
		if [ ! -L $LFS/$i ]; then
			sudo ln -sv usr/$i $LFS/$i
		fi
	done

	set -x
	relaxed_directories=(usr{,/*} var etc tools lib64)
	for directory in ${relaxed_directories[@]}; do
		sudo chown -v $BUILD_USER $LFS/$directory;
	done
	set +x
}

function DEFAULT_CONFIGURE_ARGS {
	echo "--prefix=/usr \
		  --host=$LFS_TGT \
		  --build=$(build-aux/config.guess)"
}

function build {
	./configure $(DEFAULT_CONFIGURE_ARGS) && make && make DESTDIR=$LFS install
}

function do_phase1 {
	for variable in LFS LFS_TGT LC_ALL PATH CONFIG_SITE MAKEFLAGS; do
		echo "checking variable $variable with value ${!variable}"
		([ ! -v $variable ] || [ -z ${!variable} ]) && echo "required variable $variable is unset or empty" && exit 1;
	done

	shopt -s extglob
	for package in `ls -v phase1`; do
		index=${package%%-*}
		if [ $index -lt ${start_index:=-1} ]; then
			continue
		fi
		package_script=`realpath "phase1/$package"`

		(
			. $package_script
			. setup-script-environment
			do_download ${DOWNLOAD:?}
			build
		)
	done;
}

function setup_chroot {
	echo "setting up chroot environment..."
	sudo chown --from $BUILD_USER -R root:root $LFS/{usr,var,etc,tools,lib64}

	for directory in $LFS/{dev,proc,sys,run}; do
		if [ ! -d $directory ]; then
			sudo mkdir -pv $directory
		fi
	done

	sudo mount -v --bind /dev $LFS/dev
	sudo mount -vt devpts devpts -o gid=5,mode=0620 $LFS/dev/pts
	sudo mount -vt proc proc $LFS/proc
	sudo mount -vt sysfs sysfs $LFS/sys
	sudo mount -vt tmpfs tmpfs $LFS/run

	if [ -h $LFS/dev/shm ]; then
		sudo install -v -d -m 1777 $LFS$(realpath /dev/shm)
	else
		sudo mount -vt tmpfs -o nosuid,nodev tmpfs $LFS/dev/shm
	fi

	sudo cp -r ./chroot-scripts $LFS/chroot-scripts

	. setup-script-environment
	. chroot-scripts/PACKAGES
	for script in ${SCRIPTS[@]}; do
		(
			. chroot-scripts/$script
			do_download $DOWNLOAD_URL
		)
	done

	sudo chroot "$LFS" /usr/bin/env -i \
				HOME=/root		\
				TERM="$LFS_TERM"	\
				PS1='(lfs chroot) \u:\w\$ '	\
				PATH=/usr/bin:/usr/sbin		\
				MAKEFLAGS="-j$(nproc)"		\
				TESTSUITEFLAGS="-j$(nproc)"	\
				/bin/bash /chroot-scripts/manager
}



#if [ ! -v do_build ]; then
	#setup_lfs
	#echo "launching phase1 as lfs user"
	#su lfs -s /bin/bash -c "bash `realpath $0` -b"
#else
	#do_phase1
#fi

while getopts ":bcs:l:" option; do
	case $option in
		b) do_build= ;;
		c) setup_lfs; setup_chroot; exit 0;;
		s) start_index=$OPTARG;;
		l) lfs_device=$OPTARG;;
		*) 
			echo "bad option: " $option
			exit ;;
	esac
done

setup_lfs
do_phase1
